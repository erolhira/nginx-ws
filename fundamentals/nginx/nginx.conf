#events context must be here even if it's empty, since of the validity of the configuration file.
events {
    #set the number of connections each worker process can accept.
    #Your server has a limit to how many files can be opened at once for again each CPU core.
    #ulimit -n
    worker_connections 1024;
}

#default worker count is one.
#max-connection-count = worker_processes * worker_connections
worker_processes 1;

#auto makes nginx spawns one worker for each CPU core.
#if the machine has 2 CPU cores, then nginx will spawn 2 worker processes.
#worker_process auto;

#change pid file for nginx
#pid D:/dev/ws2/ws_nginx/nginx-samples/nginx.pid;

http {

    #paths are relative to directory of nginx configuration file nginx.conf.
    include /etc/nginx/mime.types;

    #each virtual host is defined as a new server context.
    server {
        #a virtual server is responsible to listen
        #on a port for a given IP address or domain.
        listen 8080;

        #server_name is the domain, subdomain or the IP address for which the server context exists.
        #server names can also include wildcard characters --> *.mydomain.com
        #in case of this; will accept connectons for any subdomain of this domain.
        server_name test.com default;
        root /nginx-ws/fundamentals/web;

        #prefix match; matches the URIs starting with /greet
        #http://localhost:8080/greet
        #http://localhost:8080/greeting
        #http://localhost:8080/greet/abc
        location /greet {
            #return [http response code] [response data]
            return 200 'Hello from NGINX "/greet" location -- prefix match';
        }

        #exact match
        #superseeds the prefix match and regex match
        #http://localhost:8080/greet
        location = /greet {
            return 200 'Hello from NGINX "/greet" location -- exact match';
        }

        #regex match; case sensitive
        #superseeds the prefix match
        #http://localhost:8080/greet3
        location ~ /greet[0-9] {
            return 200 'Hello from NGINX "/greet" location -- regex match';
        }

        #regex match; case insensitive
        #superseeds the prefix match
        #http://localhost:8080/Greet3
        location ~* /greet[0-9] {
            return 200 'Hello from NGINX "/greet" location -- regex match - case insensitive';
        }

        #preferential prefix match
        #same as prefix match with a higher order than regex match.
        location ^~ /greet2 {
            return 200 'Hello from NGINX "/greet2" location -- preferential prefix match';
        }

        include /nginx-ws/fundamentals/nginx/variables.conf;
        include /nginx-ws/fundamentals/nginx/redirects.conf;
        include /nginx-ws/fundamentals/nginx/tryfiles.conf;
    }
}